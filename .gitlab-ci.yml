# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Laravel.gitlab-ci.yml

# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/php
image: php:latest

default:
  tags:
    - general-docker

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
services:
  - mysql:latest

variables:
  GIT_STRATEGY: clone
  MYSQL_DATABASE: project_name
  MYSQL_ROOT_PASSWORD: secret

# This folder is cached between builds
# https://docs.gitlab.com/ee/ci/yaml/index.html#cache
cache:
  paths:
    - vendor/
    - node_modules/

# This is a basic example for a gem or script which doesn't use
# services such as redis or postgres
before_script:
  - apt-get update -y
  - apt-get upgrade -y
  - apt-get install git-core -y
  - apt-get install zip unzip -y
  - apt-get install npm -y
  - apt-get install php7.4-sqlite3 -y
  # Install Composer and project dependencies.
  - cd laravel-moove && curl -sS https://getcomposer.org/installer | php
  - php composer.phar install
  - echo "dependencies installed"
  # Install Node dependencies.
  # comment this out if you don't have a node dependency
  - npm install
  # Copy over testing configuration.
  # Don't forget to set the database config in .env.testing correctly
  # DB_HOST=mysql
  # DB_DATABASE=project_name
  # DB_USERNAME=root
  # DB_PASSWORD=secret
  - cp .env.example .env
  # Run npm build
  # comment this out if you don't have a frontend build
  # you can change this to to your frontend building script like
  # npm run build
  - npm run dev
  # Generate an application key. Re-cache.
  - php artisan config:clear
  - php artisan key:generate
  - php artisan config:cache
  # Run database migrations.
  # php artisan migrate
  # Run database seed
  # php artisan db:seed

test:
  script:
    # run laravel tests
    - php vendor/bin/phpunit --coverage-text --colors=never tests
